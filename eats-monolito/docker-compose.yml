version: '3.4'

services:
  service-registry:
    container_name: service-registry
    hostname: service-registry
    image: eats-service-registry:0.0.1-SNAPSHOT
    ports:
      - 8761:8761
    networks:
      - app
           
  config-server:
    container_name: config-server
    hostname: config-server
    image: eats-config-server:0.0.1-SNAPSHOT
    ports:
      - 8888:8888
    environment:
      TZ: America/Sao_Paulo
    depends_on:
      - service-registry
    networks:
      - app
  db:
    container_name: dboracle
    image: engapi/oracle12c:1.0.0
    environment:
       TZ: America/Sao_Paulo
       ORACLE_MEM: 2000
       ORACLE_PWD: password
       ORACLE_USER: system
       ORACLE_PDB: orcl
    volumes:
      #- "C:/temp/oracledata:/opt/oracle/oradata"
      - "$HOME/.oradata:/opt/oracle/oradata"
    ports:
      - 1521:1521
      - 5500:5500
    networks:
      - app
        
  application:
    container_name: application
    hostname: application
    image: eats-application:0.0.1-SNAPSHOT
    ports:
      - 8080:8080
    environment:
      TZ: America/Sao_Paulo
    #  SPRING_CONFIG_IMPORT: "configserver:http://config-server:8888"
    #  SPRING_CLOUD_CONFIG_ENABLED: true
    #  SPRING_APPLICATION_NAME: eats-monolito
    #  SPRING_PROFILES_ACTIVE: default
    #  SPRING_PROFILES_CONFIG_URI: http://config-server:8888
    #  SPRING_DATASOURCE_URL: jdbc:oracle:thin:@//db:1521/orcl
    #  SPRING_DATASOURCE_USERNAME: system
    #  SPRING_DATASOURCE_PASSWORD: password
    #  SPRING_DATASOURCE_DRIVER_CLASS_NAME: oracle.jdbc.OracleDriver
    #  SPRING_JPA_DATABASE_PLATAFORM: org.hibernate.dialect.Oracle12cDialect
    #  SPRING_JPA_HIBERNATE_DDL_AUTO: update
    #  KAFKA_SERVER_URL: http://kafka:9092
    #  KAFKA_TOPICS_PEDIDO_CONFIRMA_PAGAMENTO: topic.pedido.confirma.pagamento
    depends_on:
      - config-server
    networks:
      - app
        
  distancia-service:
    container_name: distancia-service
    hostname: distancia-service
    image: eats-distancia-service:0.0.1-SNAPSHOT
    ports:
      - 8082:8082
    environment:
      TZ: America/Sao_Paulo
     # SPRING_CONFIG_IMPORT: "configserver:http://config-server:8888"
     # SPRING_CLOUD_CONFIG_ENABLED: true
     # SPRING_APPLICATION_NAME: eats-distancia-service
     # SPRING_PROFILES_ACTIVE: default
     # SPRING_PROFILES_CONFIG_URI: http://config-server:8888
     # SPRING_DATASOURCE_URL: jdbc:oracle:thin:@//db:1521/orcl
     # SPRING_DATASOURCE_USERNAME: system
     # SPRING_DATASOURCE_PASSWORD: password
     # SPRING_DATASOURCE_DRIVER_CLASS_NAME: oracle.jdbc.OracleDriver
     # SPRING_JPA_DATABASE_PLATAFORM: org.hibernate.dialect.Oracle12cDialect
     # SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - config-server
    networks:
      - app

  pagamento-service:
    container_name: pagamento-service
    hostname: pagamento-service
    image: eats-pagamento-service:0.0.1-SNAPSHOT
    ports:
      - 8081:8081
    environment:
      TZ: America/Sao_Paulo
     # SPRING_CONFIG_IMPORT: "configserver:http://config-server:8888"
     # SPRING_CLOUD_CONFIG_ENABLED: true
     # SPRING_APPLICATION_NAME: eats-distancia-service
     # SPRING_PROFILES_ACTIVE: default
     # SPRING_PROFILES_CONFIG_URI: http://config-server:8888
     # SPRING_DATASOURCE_URL: jdbc:oracle:thin:@//db:1521/orcl
     # SPRING_DATASOURCE_USERNAME: system
     # SPRING_DATASOURCE_PASSWORD: password
     # SPRING_DATASOURCE_DRIVER_CLASS_NAME: oracle.jdbc.OracleDriver
     # SPRING_JPA_DATABASE_PLATAFORM: org.hibernate.dialect.Oracle12cDialect
     # SPRING_JPA_HIBERNATE_DDL_AUTO: update
     # KAFKA_SERVER_URL: http://kafka:9092
     # KAFKA_TOPICS_PEDIDO_CONFIRMA_PAGAMENTO: topic.pedido.confirma.pagamento
    depends_on:
      - config-server
    networks:
      - app
              
  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app
    
  kafka:
    container_name: kafka
    hostname: kafka
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CREATE_TOPICS=topic.pedido.confirma.pagamento
    depends_on:
      - zookeeper
    networks:
      - app

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  
networks:
  app: